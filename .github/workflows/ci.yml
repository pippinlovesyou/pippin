# .github/workflows/ci.yml

name: Simple CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04  # Fixed Ubuntu version to ensure consistency

    steps:
      # 1. Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"  # Specify the Python version your project uses

      # 3. Install Dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Copy Sample Configs to Config Directory
      - name: Copy Sample Configs
        run: |
          mkdir -p my_digital_being/config
          cp my_digital_being/config_sample/*.json my_digital_being/config/

      # 5. Set Dummy API Keys in Config Files
      - name: Set Dummy API Keys
        run: |
          # Replace API keys in character_config.json with blank or dummy values
          sed -i 's/"COMPOSIO_API_KEY": ".*"/"COMPOSIO_API_KEY": ""/' my_digital_being/config/character_config.json

          # Replace API keys in skills_config.json with blank or dummy values
          sed -i 's/"LITELLM_API_KEY": ".*"/"LITELLM_API_KEY": ""/' my_digital_being/config/skills_config.json
          sed -i 's/"OPENAI_API_KEY": ".*"/"OPENAI_API_KEY": ""/' my_digital_being/config/skills_config.json
          sed -i 's/"TWITTER_API_KEY": ".*"/"TWITTER_API_KEY": ""/' my_digital_being/config/skills_config.json

      # 6. Install Selenium and Chrome Dependencies
      - name: Install Chrome and Chromedriver
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser chromium-chromedriver
          ln -s /usr/lib/chromium-browser/chromedriver /usr/bin/chromedriver

      # 7. Set Environment Variables
      - name: Set Environment Variables
        run: echo "COMPOSIO_API_KEY=dummy_value" >> $GITHUB_ENV

      # 8. Install and Use the 'tree' Command for Debugging
      - name: Install tree
        run: |
          sudo apt-get update
          sudo apt-get install -y tree

      - name: List Directory Structure
        run: |
          echo "Repository structure:"
          tree -L 3

      # 9. Compile Python Files
      - name: Compile Python Files
        run: |
          python -m compileall my_digital_being/

      # 10. Run Tests
      - name: Run Tests
        run: |
          pytest tests/ --maxfail=5 --disable-warnings
